function main(workbook: ExcelScript.Workbook) {
    let sheets = workbook.getWorksheets();

    sheets.forEach(sheet => {
        // ✅ Step 0: Store original data from column E
        const originalColumnE = sheet.getRange("E2:E10").getValues();

        // ✅ Step 1: Insert 4 columns after column B (which shifts E to I)
        for (let i = 0; i < 4; i++) {
            sheet.getRange("C:C").insert(ExcelScript.InsertShiftDirection.right);
        }

        // ✅ Step 2: Paste preserved column E data into column N (or any unused column)
        sheet.getRange("M2:M10").setValues(originalColumnE);
    });

    // Step 3: Compute Formulas for Obj1 (Columns A & B)
    sheets.forEach(sheet => {
        let lastRow = 2;
        while (
            sheet.getRange(`A${lastRow}`).getValue()?.toString().trim() !== "" ||
            sheet.getRange(`B${lastRow}`).getValue()?.toString().trim() !== ""
        ) {
            lastRow++;
        }
        lastRow--;

        const exploreRange = `C1:C${lastRow}`;
        const exploreFormulas = [["EXPLORE"]];
        for (let i = 2; i <= lastRow; i++) {
            exploreFormulas.push([`=B${i}-A${i}`]);
        }
        sheet.getRange(exploreRange).setFormulas(exploreFormulas);

        sheet.getRange("D1:E1").setFormulas([["Obj1 EXPLORE(f)", `=SUM(C2:C${lastRow})`]]);
        sheet.getRange("D2").setValue("Obj1 EXPLORE(s)");
        sheet.getRange("E2").setFormula("=ROUND((E1/17.17),1)");
    });

    // Step 4: Compute Formulas for Obj2 (Columns G & H)
    sheets.forEach(sheet => {
        let lastRow = 2;
        while (
            sheet.getRange(`G${lastRow}`).getValue()?.toString().trim() !== "" ||
            sheet.getRange(`H${lastRow}`).getValue()?.toString().trim() !== ""
        ) {
            lastRow++;
        }
        lastRow--;

        const exploreRange = `I1:I${lastRow}`;
        const exploreFormulas = [["EXPLORE"]];
        for (let i = 2; i <= lastRow; i++) {
            exploreFormulas.push([`=H${i}-G${i}`]);
        }
        sheet.getRange(exploreRange).setFormulas(exploreFormulas);

        sheet.getRange("J1:K1").setFormulas([["Obj2 EXPLORE(f)", `=SUM(I2:I${lastRow})`]]);
        sheet.getRange("J2").setValue("Obj2 EXPLORE(s)");
        sheet.getRange("K2").setFormula("=ROUND((K1/17.17),1)");
    });

    // Step 5: Format and Compute Summary Data in D6:E9
    sheets.forEach(sheet => {
        const range = sheet.getRange("D6:E9");
        const rangeFormat = range.getFormat();

        const borderIndices = [
            ExcelScript.BorderIndex.edgeLeft,
            ExcelScript.BorderIndex.edgeTop,
            ExcelScript.BorderIndex.edgeBottom,
            ExcelScript.BorderIndex.edgeRight,
        ];
        borderIndices.forEach(index => {
            rangeFormat.getRangeBorder(index).setStyle(ExcelScript.BorderLineStyle.continuous);
            rangeFormat.getRangeBorder(index).setWeight(ExcelScript.BorderWeight.medium);
        });

        const bordersToRemove = [
            ExcelScript.BorderIndex.diagonalDown,
            ExcelScript.BorderIndex.diagonalUp,
            ExcelScript.BorderIndex.insideVertical,
            ExcelScript.BorderIndex.insideHorizontal,
        ];
        bordersToRemove.forEach(index => {
            rangeFormat.getRangeBorder(index).setStyle(ExcelScript.BorderLineStyle.none);
        });

        range.setFormulas([
            ["Obj1 EXPLORE(s)", "=ROUND(E2,1)"],
            ["Obj2 EXPLORE(s)", "=ROUND(K2,1)"],
            ["TET", "=SUM(E6:E7)"],
            ["DI", "=ROUND(((E6-E7)/E8),2)"],
        ]);
    });

    // Step 6: Consolidate Data into a New Sheet
    let newSheet = workbook.addWorksheet("Consolidated Data");
    let currentRow = 1;

    sheets.forEach(sheet => {
        if (sheet.getName() !== "Consolidated Data") {
            newSheet.getRange(`A${currentRow}`).setValue(sheet.getName());
            currentRow++;
            let dataRange = sheet.getRange("D6:E9").getValues();
            newSheet.getRange(`A${currentRow}:B${currentRow + 3}`).setValues(dataRange);
            currentRow += 4;
        }
    });
